#!/usr/bin/python3

# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
#    Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
#    Класс-исключение должен контролировать типы данных элементов списка.
#    Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
#    не остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,
#    сформированный список выводится на экран.
#    Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
#    При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
#    только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
#    соответствующее сообщение. При этом работа скрипта не должна завершаться.


class NotDigit(Exception):
    def __init__(self, txt):
        self.txt = txt


def is_float(s):
    try:
        float(s)
        return True
    except ValueError:
        return False


lst = []
print('Вводите по одному целому числу, нажмая "Enter". Для завершения введите "q"')
while True:
    try:
        s = input('> ')
        if s.lower() == 'q':
            break
        if not is_float(s):
            raise NotDigit('Ошибка ввода! Допустимы только целые числа.')
    except NotDigit as nd:
        print(nd)
    else:
        lst.append(float(s))
print(lst)
